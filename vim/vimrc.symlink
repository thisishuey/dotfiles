" dotfiles-symlink=~/.vimrc

if empty(glob("~/.vim/autoload/plug.vim"))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin("~/.vim/plugged")

  Plug 'airblade/vim-gitgutter'
  Plug 'ap/vim-css-color'
  Plug 'benmills/vimux'
  Plug 'chriskempson/base16-vim'
  Plug 'christoomey/vim-tmux-navigator'
  Plug 'editorconfig/editorconfig-vim'
  Plug 'edkolev/promptline.vim'
  Plug 'edkolev/tmuxline.vim'
  Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
  Plug 'junegunn/fzf.vim'
  Plug 'kchmck/vim-coffee-script'
  Plug 'leafgarland/typescript-vim'
  " Plug 'ludovicchabant/vim-gutentags'
  Plug 'majutsushi/tagbar'
  Plug 'mattn/emmet-vim'
  Plug 'mhinz/vim-startify'
  Plug 'moll/vim-bbye'
  Plug 'mxw/vim-jsx'
  " Plug 'ncm2/ncm2'
  Plug 'pangloss/vim-javascript'
  Plug 'raimondi/delimitmate'
  Plug 'reasonml-editor/vim-reason-plus'
  " Plug 'roxma/nvim-yarp'
  Plug 'scrooloose/nerdtree'
  Plug 'tpope/vim-bundler'
  Plug 'tpope/vim-commentary'
  Plug 'tpope/vim-dadbod'
  Plug 'tpope/vim-dispatch'
  Plug 'tpope/vim-fugitive'
  Plug 'tpope/vim-liquid'
  Plug 'tpope/vim-rails'
  Plug 'tpope/vim-repeat'
  Plug 'tpope/vim-sensible'
  Plug 'tpope/vim-surround'
  Plug 'tpope/vim-vinegar'
  Plug 'vim-airline/vim-airline'
  Plug 'vim-airline/vim-airline-themes'
  Plug 'w0rp/ale'
  Plug 'xolox/vim-misc'
  Plug 'xolox/vim-session'

call plug#end()

if filereadable(expand("~/.vimrc_background"))
  let base16colorspace = 256
  source ~/.vimrc_background
endif

let mapleader = " "
let delimitMate_expand_cr = 1
let delimitMate_expand_space = 1

set completeopt=menuone,noinsert,noselect
set cursorline
set expandtab
set hidden
set ignorecase
set linebreak
set list
set listchars=tab:→\ ,nbsp:␣,trail:•,precedes:«,extends:»
set nojoinspaces
set noshowmode
set noswapfile
set nowrap
set number
set path=$PWD/**
set relativenumber
set shiftwidth=2
set shortmess=I
set signcolumn=yes
set softtabstop=2
set splitbelow
set splitright
set tabstop=2
set timeoutlen=1000
set ttimeoutlen=0
set wildignore+=node_modules/*
set wildmenu
set wildmode=list:longest,list:full

inoremap <Tab> <C-r>=CleverTab()<cr>
inoremap <S-Tab> <C-n>

map <leader>vir :VimuxInspectRunner<cr>
map <leader>vlc :VimuxRunLastCommand<cr>
map <leader>vpc :VimuxPromptCommand<cr>

nnoremap <C-p> :Files<cr>
nnoremap <leader><leader> <C-^>
nnoremap <leader>ev :edit ~/.vimrc<cr>
nnoremap <leader>sv :source ~/.vimrc<cr>
nnoremap <leader>tb :TagbarToggle<cr>
nnoremap <silent> <cr> :nohlsearch<cr>
nnoremap <silent> <leader>bda :%bd<cr>
nnoremap <silent> <leader>bdc :bd<cr>
nnoremap <silent> <leader>bdo :%bd<cr><C-o>:bd#<cr>

noremap <silent> k gk
noremap <silent> j gj

nmap <leader>sp :call <sid>SynStack()<cr>
nmap <leader>ht :so $VIMRUNTIME/syntax/hitest.vim<cr>

function! CleverTab()
  let col = col(".") - 1
  if !col || getline(".")[col - 1] !~ "\k"
    return "\<Tab>"
  else
    return "\<C-p>"
  endif
endfunction

function! <sid>SynStack()
  if !exists("*synstack")
    return
  endif
  echo map(synstack(line("."), col(".")), "synIDattr(v:val, 'name')")
endfunc

:augroup relativenumbertoggle
: autocmd!
: autocmd InsertLeave * set relativenumber
: autocmd InsertEnter * set norelativenumber
:augroup END

:augroup specialcharactertoggle
: autocmd!
: autocmd InsertLeave * set list
: autocmd InsertEnter * set nolist
:augroup END

:autocmd Syntax * highlight MatchParen cterm=bold ctermfg=15 ctermbg=19

" airline
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_theme = "base16"

" ale
highlight ALEError cterm=none ctermfg=00 ctermbg=01
highlight ALEWarning cterm=none ctermfg=00 ctermbg=03
let g:ale_fix_on_save = 1
let g:ale_fixers = {
  \ "*": [ "prettier" ],
  \ "ruby": [ "rubocop" ]
\ }
let g:ale_sign_error = "●"
let g:ale_sign_warning = "●"

" emmet
let g:user_emmet_settings = {
  \ "javascript.jsx": {
    \ "extends": "jsx"
  \ }
\ }

" ncm2
" autocmd BufEnter * call ncm2#enable_for_buffer()

" promptline
let g:promptline_preset = {
  \ "a": [ promptline#slices#user() ],
  \ "b": [ promptline#slices#cwd() ],
  \ "c": [ promptline#slices#vcs_branch(), promptline#slices#git_status() ],
  \ "warn": [ promptline#slices#last_exit_code() ],
  \ "options": {
    \ "left_sections": [ "b", "c", "warn" ],
    \ "right_sections": []
  \ }
\ }
let g:promptline_theme = "airline"

" search
highlight IncSearch cterm=bold ctermfg=19 ctermbg=15
highlight Search cterm=bold ctermfg=15 ctermbg=19

" sessions
let g:session_autoload = "no"
let g:session_default_name = "** Default **"
let g:session_default_overwrite = 1
let g:session_directory = "~/.vim/session"
let g:session_extension = ""
let g:session_autosave = "yes"

" startify
let g:startify_change_to_vcs_root = 1
let g:startify_custom_header = [
  \ '   -----------------------------------------------------------   ',
  \ '      C A R P E   T E L A M   -   S E I Z E   T H E   W E B      ',
  \ '   -----------------------------------------------------------   ',
  \ '       __   __  __   __  _______  __   __            ____        ',
  \ '      |  | |  ||  | |  ||       ||  | |  |    ____  |_   |       ',
  \ '      |  |_|  ||  | |  ||    ___||  |_|  |   |____|   |   |      ',
  \ '      |       ||  |_|  ||   |___ |       |    ____    |   |      ',
  \ '      |       ||       ||    ___||_     _|   |____|   |   |      ',
  \ '      |   _   ||       ||   |___   |   |             _|   |      ',
  \ '      |__| |__||_______||_______|  |___|            |____|       ',
  \ '                                                                 ',
  \ '   -----------------------------------------------------------   ',
  \ '           Jeff "Huey" Huelsbeck - huey@carpetelam.com           ',
  \ '   -----------------------------------------------------------   ',
\ ]
let g:startify_lists = [
  \ { "type": "sessions", "header": [ "   Sessions" ] },
  \ { "type": "files", "header": [ "   Recent Files" ] },
  \ { "type": "bookmarks", "header": [ "   Bookmarks" ] },
  \ { "type": "commands", "header": [ "   Commands" ] }
\ ]
let g:startify_session_dir = '~/.vim/session'

" tmuxline
let g:tmuxline_preset = {
  \'a': '#S',
  \'win': '#I:#W#F',
  \'cwin': '#I:#W#F',
  \'x': '%Y-%m-%d',
  \'y': '%H:%M',
  \'z': 'huey@carpetelam.com',
  \'options': {
    \'status-justify': 'left'
  \}
\}
